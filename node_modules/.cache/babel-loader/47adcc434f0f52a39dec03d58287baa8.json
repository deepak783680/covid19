{"ast":null,"code":"var _jsxFileName = \"/Users/deepakverma/Desktop/deepak2/src/Components/CountryPicker/CountryPicker.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { FormControl, NativeSelect, InputLabel } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({\n  handleCountryChange\n}) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    color: \"primary\",\n    className: styles.formControl,\n    style: {\n      color: 'blue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Select A Country\"), /*#__PURE__*/React.createElement(NativeSelect, {\n    onChange: e => handleCountryChange(e.target.value),\n    style: {\n      color: 'red',\n      fontSize: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Global\"), fetchedCountries.map((country, key) => /*#__PURE__*/React.createElement(\"option\", {\n    key: key,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, country))));\n};\n\nexport default CountryPicker;","map":{"version":3,"sources":["/Users/deepakverma/Desktop/deepak2/src/Components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","FormControl","NativeSelect","InputLabel","styles","fetchCountries","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","formControl","color","e","target","value","fontSize","map","country","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAuBC,YAAvB,EAAqCC,UAArC,QAAuD,mBAAvD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,cAAT,QAA+B,WAA/B;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AACjD,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,EAAD,CAAxD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,QAAQ,GAAG,YAAY;AAC3BD,MAAAA,mBAAmB,CAAC,MAAMJ,cAAc,EAArB,CAAnB;AACD,KAFD;;AAGAK,IAAAA,QAAQ;AACT,GALQ,EAKN,CAACD,mBAAD,CALM,CAAT;AAQA,sBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAgC,IAAA,KAAK,EAAG,SAAxC;AAAkD,IAAA,SAAS,EAAEL,MAAM,CAACO,WAApE;AAAiF,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAa,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,YAAD;AACE,IAAA,QAAQ,EAAGC,CAAD,IAAON,mBAAmB,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CADtC;AAEE,IAAA,KAAK,EAAE;AAAEH,MAAAA,KAAK,EAAE,KAAT;AAAiBI,MAAAA,QAAQ,EAAC;AAA1B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAMGR,gBAAgB,CAACS,GAAjB,CAAqB,CAACC,OAAD,EAAUC,GAAV,kBACpB;AAAQ,IAAA,GAAG,EAAEA,GAAb;AAAkB,IAAA,KAAK,EAAED,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,CADD,CANH,CAFF,CADF;AAkBD,CA5BD;;AA8BA,eAAeZ,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FormControl , NativeSelect ,InputLabel } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api\";\n\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n \n  return (\n    <FormControl variant=\"outlined\" color = 'primary' className={styles.formControl} style={{ color: 'blue' }}>\n      <InputLabel  style={{ color: 'red' }} >Select A Country</InputLabel>\n      <NativeSelect\n        onChange={(e) => handleCountryChange(e.target.value)}\n        style={{ color: 'red' , fontSize:40  }}\n        \n      >\n        <option value=\"\" >Global</option>\n        {fetchedCountries.map((country, key) => (\n          <option key={key} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n    \n  );\n};\n\nexport default CountryPicker;\n"]},"metadata":{},"sourceType":"module"}